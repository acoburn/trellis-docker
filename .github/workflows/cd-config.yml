name: GitHub CD

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 15 * * 5"

jobs:
  triplestore:
    name: Quarkus Triplestore
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: LDP tests
        run: |
          docker-compose -f trellis-quarkus-triplestore-compose.yml up -d
          python verify_running.py --baseurl http://localhost/
          python setup.py test -a "--baseurl=http://localhost/"
          sh run_ldp_testsuite.sh

      - name: Publish reports
        run: |
          aws s3 cp --recursive --exclude "*" --include "*.html" --include "*.ttl" ./report s3://$AWS_BUCKET/ldp/report-mp-ts
          aws s3 cp --recursive --content-type "application/ld+json" --exclude "*" --include "*.jsonld" ./report s3://$AWS_BUCKET/ldp/report-mp-ts
        env:
            AWS_BUCKET: ${{ secrets.AWS_BUCKET }}
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
            AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

  postgresql:
    name: Quarkus PostgreSQL
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: LDP tests
        run: |
          docker-compose -f trellis-quarkus-postgresql-compose.yml up -d
          python verify_running.py --baseurl http://localhost/
          python setup.py test -a "--baseurl=http://localhost/"
          sh run_ldp_testsuite.sh

      - name: Publish reports
        run: |
          aws s3 cp --recursive --exclude "*" --include "*.html" --include "*.ttl" ./report s3://$AWS_BUCKET/ldp/report-mp-pg
          aws s3 cp --recursive --content-type "application/ld+json" --exclude "*" --include "*.jsonld" ./report s3://$AWS_BUCKET/ldp/report-mp-pg
        env:
            AWS_BUCKET: ${{ secrets.AWS_BUCKET }}
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
            AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

  legacy-postgresql:
    name: Legacy (Dropwizard) PostgreSQL
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: LDP tests
        run: |
          docker-compose -f trellis-postgresql-compose.yml up -d
          python verify_running.py --baseurl http://localhost/
          python setup.py test -a "--baseurl=http://localhost/"
          sh run_ldp_testsuite.sh

      - name: Publish reports
        run: |
          aws s3 cp --recursive --exclude "*" --include "*.html" --include "*.ttl" ./report s3://$AWS_BUCKET/ldp/report-dw-pg
          aws s3 cp --recursive --content-type "application/ld+json" --exclude "*" --include "*.jsonld" ./report s3://$AWS_BUCKET/ldp/report-dw-pg
        env:
            AWS_BUCKET: ${{ secrets.AWS_BUCKET }}
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
            AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

  legacy-h2:
    name: Legacy (Dropwizard) H2
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: LDP tests
        run: |
          docker-compose -f trellis-h2-compose.yml up -d
          python verify_running.py --baseurl http://localhost/
          python setup.py test -a "--baseurl=http://localhost/"
          sh run_ldp_testsuite.sh

      - name: Publish reports
        run: |
          aws s3 cp --recursive --exclude "*" --include "*.html" --include "*.ttl" ./report s3://$AWS_BUCKET/ldp/report-dw-h2
          aws s3 cp --recursive --content-type "application/ld+json" --exclude "*" --include "*.jsonld" ./report s3://$AWS_BUCKET/ldp/report-dw-h2
        env:
            AWS_BUCKET: ${{ secrets.AWS_BUCKET }}
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
            AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

  legacy-triplestore:
    name: Legacy (Dropwizard) Triplestore
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: LDP tests
        run: |
          docker-compose -f trellis-compose.yml up -d
          python verify_running.py --baseurl http://localhost/
          python setup.py test -a "--baseurl=http://localhost/"
          sh run_ldp_testsuite.sh

      - name: Publish reports
        run: |
          aws s3 cp --recursive --exclude "*" --include "*.html" --include "*.ttl" ./report s3://$AWS_BUCKET/ldp/report-dw-ts
          aws s3 cp --recursive --content-type "application/ld+json" --exclude "*" --include "*.jsonld" ./report s3://$AWS_BUCKET/ldp/report-dw-ts
        env:
            AWS_BUCKET: ${{ secrets.AWS_BUCKET }}
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
            AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}


